/*!
 * cachu v1.0.4
 * Â© 2021 - Samuel Kopp
 * Code licensed under Apache-2.0
 */

export default class cache{constructor(config){"object"==typeof config&&(this.max=config.max||1/0,this.maxAge=config.maxAge||900,this.maxLength=config.maxLength||1/0,this.store=[])}setKey=async(key,value)=>{if(!key||!value)return!1;const index=this.store.findIndex(i=>i.key===key);if(-1!==index)return!1;if("string"==typeof value&&value.length>this.maxLength)return!1;if(this.store.length===this.max){const max=await this.store.reduce((prev,current)=>prev.maxAge<current.maxAge?prev:current),i=this.store.findIndex(i=>i.key===max.key);this.store.splice(i,1)}const item={key:key,value:value,createdAt:Date.now()};return this.store=this.store.filter(i=>Date.now()-i.createdAt<1e3*this.maxAge&&i.key!==key),this.store.push(item),!0};getKey=async key=>{if(!key)return null;const index=this.store.findIndex(i=>i.key===key);if(-1===index)return null;const item=this.store[index];return this.store=this.store.filter(i=>Date.now()-i.createdAt<1e3*this.maxAge||i.key===key),item.createdAt=Date.now(),item.value};updateKey=async(key,value)=>{if(!key||!value)return!1;const index=this.store.findIndex(i=>i.key===key);return-1!==index&&(this.store[index]={key:key,value:value,createdAt:Date.now()},!0)};stealKey=async key=>{if(!key)return null;const index=this.store.findIndex(i=>i.key===key);if(-1===index)return null;const item=this.store[index];return this.store=this.store.filter(i=>Date.now()-i.createdAt<1e3*this.maxAge||i.key===key),item.value};hasKey=async key=>{if(!key)return!1;const index=this.store.findIndex(i=>i.key===key);return-1!==index};hasValue=async value=>{if(!value)return!1;const index=this.store.findIndex(item=>item.value===value);return-1!==index};deleteKey=async key=>{if(!key)return!1;const index=this.store.findIndex(i=>i.key===key);return-1!==index&&(this.store.splice(index,1),!0)};purge=async()=>(store=[],!0)}