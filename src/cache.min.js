/*! Devyl's Cache v1.0.0 | Â© 2021 Samuel Kopp | Code licensed under Apache-2.0 */
export default class cache{constructor(config){this.maxAge=config.maxAge||900,this.maxLength=config.length||100,this.store=[]}setKey=async(key,value)=>{const item={key:key,value:value,createdAt:Date.now()};this.store.push(item)};getKey=async key=>{const index=this.store.findIndex(item=>item.key===key);if(-1===index)return null;const item=this.store[index];return this.store=this.store.filter(i=>Date.now()-i.createdAt<1e3*this.maxAge),item.value};updateKey=async(key,value)=>{const index=this.store.findIndex(item=>item.key===key);return-1===index?null:(this.store[index]={key:key,value:value,createdAt:Date.now()},value)};stealKey=async key=>{const index=this.store.findIndex(item=>item.key===key);if(-1===index)return null;const item=this.store[index];return item.value};hasKey=async key=>{const index=this.store.findIndex(item=>item.key===key);return-1!==index};hasValue=async value=>{const index=this.store.findIndex(item=>item.value===value);return-1!==index};deleteKey=async key=>{const index=this.store.findIndex(item=>item.key===key);-1!==index&&this.store.splice(index,1)};purge=async()=>{store=[]}}